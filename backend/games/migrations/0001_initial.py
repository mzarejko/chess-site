# Generated by Django 3.1.2 on 2021-05-19 17:24

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import games.chessSettings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackChessBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pawns', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_pawns, max_length=8, size=None)),
                ('knights', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_knights, max_length=2, size=None)),
                ('queen', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_queen, max_length=1, size=None)),
                ('bishops', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_bishops, max_length=2, size=None)),
                ('rooks', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_rooks, max_length=2, size=None)),
                ('king', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_king, max_length=1, size=None)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='black_chess_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WhiteChessBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pawns', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_white_pawns, max_length=8, size=None)),
                ('knights', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_white_knights, max_length=2, size=None)),
                ('queen', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_white_queen, max_length=1, size=None)),
                ('bishops', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_black_bishops, max_length=2, size=None)),
                ('rooks', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_white_rooks, max_length=2, size=None)),
                ('king', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=games.chessSettings.ArrayFunc.get_white_king, max_length=1, size=None)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='white_chess_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('blackChessBoard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='black_chess', to='games.blackchessboard')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.chat')),
                ('opponent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opponent', to=settings.AUTH_USER_MODEL)),
                ('whiteChessBoard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='white_chess', to='games.whitechessboard')),
                ('who_has_turn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hasTurn', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
