version: "3.8"


services:
    db:
        image: postgres
        container_name: db
        restart: always
        environment:
          - POSTGRES_HOST=db
          - PORT=5432
          - POSTGRES_DB=chessbase
          - POSTGRES_USER=user
          - POSTGRES_PASSWORD=harnas 
        ports:
            - "5432:5432"
    backend:
        build: ./backend 
        container_name: backend
        restart: on-failure
        volumes:
            - ./backend:/app/backend
        command:  bash -c "./wait-for.sh db:5432 -- python3 manage.py makemigrations && 
                           python3 manage.py migrate &&
                           python3 manage.py runserver 0.0.0.0:8000"
        ports:
            - "8000:8000"
        stdin_open: true
        tty: true
        depends_on:
            - db
    frontend:
        build: ./frontend
        container_name: frontend
        volumes:
            - ./frontend:/app
            - /app/node_modules
        ports:
            - "3000:3000"
        command: npm start
        depends_on:
            - backend
    robotframework:
        build: robotframework/rfdocker:latest 
        container_name: robotframework
        volumes:
            - ./test/results:/opt/robotframework/reports 
            - ./test/origin:/opt/robotframework/tests
        ports:
          - "5000:5000"
        command: robot /opt/robotframework/tests/test.robot
        depends_on:
          - backend
          - frontend

